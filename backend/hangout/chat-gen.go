package hangout

import "google.golang.org/api/chat/v1"

type DquizDeprecatedEvent struct {
	Action *chat.FormAction `json:"action,omitempty"`

	// ConfigCompleteRedirectUrl: The URL the bot should redirect the user
	// to after they have completed an
	// authorization or configuration flow outside of Hangouts Chat. See
	// the
	// [Authorizing access to 3p services
	// guide](/hangouts/chat/how-tos/auth-3p)
	// for more information.
	ConfigCompleteRedirectUrl string `json:"configCompleteRedirectUrl,omitempty"`

	// EventTime: The timestamp indicating when the event was dispatched.
	EventTime string `json:"eventTime,omitempty"`

	// Message: The message that triggered the event, if applicable.
	Message *chat.Message `json:"message,omitempty"`

	// Space: The room or DM in which the event occurred.
	Space *chat.Space `json:"space,omitempty"`

	// ThreadKey: The bot-defined key for the thread related to the event.
	// See the
	// thread_key field of the
	// `spaces.message.create` request for more information.
	ThreadKey string `json:"threadKey,omitempty"`

	// Token: A secret value that bots can use to verify if a request is
	// from Google. The
	// token is randomly generated by Google, remains static, and can be
	// obtained
	// from the Hangouts Chat API configuration page in the Cloud
	// Console.
	// Developers can revoke/regenerate it if needed from the same page.
	Token string `json:"token,omitempty"`

	// Type: The type of the event.
	//
	// Possible values:
	//   "UNSPECIFIED" - Default value for the enum. DO NOT USE.
	//   "MESSAGE" - A message was sent in a room or direct message.
	//   "ADDED_TO_SPACE" - The bot was added to a room or DM.
	//   "REMOVED_FROM_SPACE" - The bot was removed from a room or DM.
	//   "CARD_CLICKED" - The bot's interactive card was clicked.
	Type string `json:"type,omitempty"`

	// User: The user that triggered the event.
	User *DquizUser `json:"user,omitempty"`

	// ForceSendFields is a list of field names (e.g. "Action") to
	// unconditionally include in API requests. By default, fields with
	// empty values are omitted from API requests. However, any non-pointer,
	// non-interface field appearing in ForceSendFields will be sent to the
	// server regardless of whether the field is empty or not. This may be
	// used to include empty fields in Patch requests.
	ForceSendFields []string `json:"-"`

	// NullFields is a list of field names (e.g. "Action") to include in API
	// requests with the JSON null value. By default, fields with empty
	// values are omitted from API requests. However, any field with an
	// empty value appearing in NullFields will be sent to the server as
	// null. It is an error if a field in this list has a non-empty value.
	// This may be used to include null fields in Patch requests.
	NullFields []string `json:"-"`
}

type DquizUser struct {
	DisplayName string `json:"displayName,omitempty"`

	DomainId string `json:"domainId,omitempty"`

	Name string `json:"name,omitempty"`

	Email string `json:"email,omitempty"`

	Type string `json:"type,omitempty"`

	ForceSendFields []string `json:"-"`

	NullFields []string `json:"-"`
}